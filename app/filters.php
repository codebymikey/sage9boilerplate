<?php

namespace App;

/**
 * Add <body> classes
 */
add_filter('body_class', function (array $classes) {
    /** Add page slug if it doesn't exist */
    if (is_single() || is_page() && !is_front_page()) {
        if (!in_array(basename(get_permalink()), $classes)) {
            $classes[] = basename(get_permalink());
        }
    }

    /** Add class if sidebar is active */
    if (display_sidebar()) {
        $classes[] = 'sidebar-primary';
    }

    /** Clean up class names for custom templates */
    $classes = array_map(function ($class) {
        return preg_replace(['/-blade(-php)?$/', '/^page-template-views/'], '', $class);
    }, $classes);

    return array_filter($classes);
});

/**
 * Add "â€¦ Continued" to the excerpt
 */
add_filter('excerpt_more', function () {
    return '';
});

/**
 * Filter the except length to 20 words.
 *
 * @param int $length Excerpt length.
 * @return int (Maybe) modified excerpt length.
 */

add_filter( 'excerpt_length', function( $length ) {
    return 20;
});

/**
 * Template Hierarchy should search for .blade.php files
 */
collect([
    'index', '404', 'archive', 'author', 'category', 'tag', 'taxonomy', 'date', 'home',
    'frontpage', 'page', 'paged', 'search', 'single', 'singular', 'attachment'
])->map(function ($type) {
    add_filter("{$type}_template_hierarchy", __NAMESPACE__.'\\filter_templates');
});

/**
 * Render page using Blade
 */
add_filter('template_include', function ($template) {
    $data = collect(get_body_class())->reduce(function ($data, $class) use ($template) {
        return apply_filters("sage/template/{$class}/data", $data, $template);
    }, []);
    if ($template) {
        echo template($template, $data);
        return get_stylesheet_directory().'/index.php';
    }
    return $template;
}, PHP_INT_MAX);

/**
 * Tell WordPress how to find the compiled path of comments.blade.php
 */
add_filter('comments_template', function ($comments_template) {
    $comments_template = str_replace(
        [get_stylesheet_directory(), get_template_directory()],
        '',
        $comments_template
    );
    return template_path(locate_template(["views/{$comments_template}", $comments_template]) ?: $comments_template);
});

/**
 * Add bootstrap class to links generated by next_posts_link and previous_posts_link
 */
add_filter('next_posts_link_attributes', __NAMESPACE__.'\\posts_link_attributes');
add_filter('previous_posts_link_attributes', __NAMESPACE__.'\\posts_link_attributes');

function posts_link_attributes() {
    return 'class="page-link"';
}

/**
 * Exclude sticky posts from home page.
 */

add_action('pre_get_posts',  function($query) {
    if (is_home() && $query->is_main_query())
        $query->set('post__not_in', get_option('sticky_posts'));
});

/**
 * Replaces default search form
 */
add_filter('get_search_form', function ($form) {
    $form = '';
    echo template('partials.search-form');
    return $form;
});

/**
 * Add Bootstrap form control class to woocommerce fields
 */

add_filter('woocommerce_form_field_args',  __NAMESPACE__.'\\wc_form_field_args',10,3);
function wc_form_field_args($args, $key, $value) {
	$args['input_class'] = array( 'form-control' );
	return $args;
}